// vim: ft=javascript

// no params
[],						""
//[""],						null
[":"],						":"
[":foo"],					":foo"
["@foo"],					"@foo"
["@foo", ":bar"],				"@foo :bar"

// simple join
["foo", "bar", "baz", "asdf"],			"foo bar baz asdf"
// simple join with trailing param
["foo", "bar", "baz", "asdf quux"],		"foo bar baz :asdf quux"
["foo", "bar", "baz", ""],			"foo bar baz :"
["foo", "bar", "baz", ":asdf"],			"foo bar baz ::asdf"

// invalid arg in the middle
["foo", "bar baz", "asdf"],			null
["foo", ":bar", "baz"],				null
["foo", "bar", "", "baz"],			null

// only trailing param (disallow to avoid being confused with prefix)
["foo bar"],					null

// prefixed join
[":test", "foo", "bar", "baz", "asdf"],		":test foo bar baz asdf"
// prefixed join with trailing param
[":test", "foo", "bar", "baz", "asdf quux"],	":test foo bar baz :asdf quux"
[":test", "foo", "bar", "baz", ""],		":test foo bar baz :"
[":test", "foo", "bar", "baz", ":asdf"],	":test foo bar baz ::asdf"

// prefix and invalid arg in the middle
[":test", "foo", "bar baz", "asdf"],		null
[":test", "foo", ":bar", "baz"],		null
[":test", "foo", "bar", "", "baz"],		null
// prefix containing spaces
[":test test", "foo", "bar", "baz"],		null

// prefix with only trailing param
[":foo", "bar"],				":foo bar"
[":foo", "bar baz"],				":foo :bar baz"

// tagged join
["@test", "foo", "bar", "baz", "asdf"],		"@test foo bar baz asdf"
// tagged join with trailing param
["@test", "foo", "bar", "baz", "asdf quux"],	"@test foo bar baz :asdf quux"
["@test", "foo", "bar", "baz", ""],		"@test foo bar baz :"
["@test", "foo", "bar", "baz", ":asdf"],	"@test foo bar baz ::asdf"

// tag and invalid arg in the middle
["@test", "foo", "bar baz", "asdf"],		null
["@test", "foo", ":bar", "baz"],		null
["@test", "foo", "bar", "", "baz"],		null
// tag containing spaces
["@test test", "foo", "bar", "baz"],		null

// tag with only trailing param
["@test", "bar"],				"@test bar"
["@test", "bar baz"],				null

// tagged and prefixed join
["@test", ":test", "foo", "baz", "asdf"],	"@test :test foo baz asdf"
// tagged and prefixed join with trailing param
["@test", ":test", "foo", "baz", "asdf quux"],	"@test :test foo baz :asdf quux"
["@test", ":test", "foo", "baz", ""],		"@test :test foo baz :"
["@test", ":test", "foo", "baz", ":asdf"],	"@test :test foo baz ::asdf"

// tag, prefix, and invalid arg in the middle
["@test", ":test", "foo", "bar baz", "asdf"],	null
["@test", ":test", "foo", ":bar", "baz"],	null
["@test", ":test", "foo", "bar", "", "baz"],	null
// tag or prefix containing spaces
["@test test", ":test", "foo", "bar", "baz"],	null
["@test", ":test test", "foo", "bar", "baz"],	null

// tabs are considered regular characters, not whitespace
["foo", "bar", "baz\tasdf"],			"foo bar baz\tasdf"
["foo", "bar", "baz\tasdf", "qux"],		"foo bar baz\tasdf qux"
["\tfoo", "bar", "baz"],			"\tfoo bar baz"
["\tfoo", "bar baz"],				"\tfoo :bar baz"
["foo", "bar\t\t"],				"foo bar\t\t"
[":test\ttest", "foo", "bar"],			":test\ttest foo bar"
["@test\ttest", "foo", "bar"],			"@test\ttest foo bar"

// TODO: disallowed null bytes
// ["foo\u0000", "bar"],				null
// ["foo", ":bar\u0000"],				null
// [":foo\u0000", "bar"],				null
// ["@foo\u0000", "bar"],				null

// TODO: disallowed carriage returns
// ["foo\r", "bar"],				null
// ["foo", ":bar\r"],				null
// [":foo\r", "bar"],				null
// ["@foo\r", "bar"],				null

// TODO: disallowed line feeds
// ["foo\n", "bar"],				null
// ["foo", ":bar\n"],				null
// [":foo\n", "bar"],				null
// ["@foo\n", "bar"],				null
